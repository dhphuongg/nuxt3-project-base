// Media queries
$tablet: 1024;
$small-tablet: 768;
$mobile: 480;

@mixin tablet {
  @media (max-width: ($tablet * 1px)) {
    @content;
  }
}
@mixin small-tablet {
  @media (max-width: ($small-tablet * 1px)) {
    @content;
  }
}
@mixin mobile {
  @media (max-width: ($mobile * 1px)) {
    @content;
  }
}

// Box
@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}

// Flex box
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-center-vert {
  display: flex;
  align-items: center;
}

@mixin flex-center-horiz {
  display: flex;
  justify-content: center;
}
/* ===== Usage ===== 
.vertical-centered-element {
  @include flex-center-vert;
}

.horizontally-centered-element {
  flex-direction: column;
  @include flex-center-vert;
}
*/

// Text style
@mixin font-size($font-size, $line-height: normal, $letter-spacing: normal) {
  font-size: $font-size * 1px;
  // font-size: $font-size * 0.1rem;
  // example using rem values and 62.5% font-size so 1rem = 10px

  @if $line-height==normal {
    line-height: normal;
  } @else {
    line-height: $line-height / $font-size;
  }

  @if $letter-spacing==normal {
    letter-spacing: normal;
  } @else {
    letter-spacing: #{$letter-spacing / $font-size}em;
  }
}
/* ===== Usage =====
p {
  @include font-size(12, 18, 1.2);
  // returns
  font-size: 12px;
  line-height: 1.5; // 18 / 12
  letter-spacing: 0.1em;
}
*/

// font
@mixin font-face($font-name, $path, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($path + ".eot");
    src:
      url($path + ".eot?#iefix") format("embedded-opentype"),
      url($path + ".woff") format("woff"),
      url($path + ".ttf") format("truetype"),
      url($path + ".svg##{$font-name}") format("svg");
    font-weight: $weight;
    font-style: $style;
  }
}
/* ===== Usage =====
@include font-face(Roboto, "./assets/Roboto", normal, normal);
*/
